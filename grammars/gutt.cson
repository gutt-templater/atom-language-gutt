'scopeName': 'source.gutt'
'fileTypes': [
  'gutt'
  'tmplt'
]
'firstLineMatch': '''(?xi)
  # Document type definition
  <component>
'''
'name': 'Gutt'
'patterns': [
  {
    'begin': '(<)([a-zA-Z0-9:\\-]++)(?=[^>]*></\\2>)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.html'
    'end': '(>(\\s*<)/)(\\2)(>)'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'meta.scope.between-tag-pair.html'
      '3':
        'name': 'entity.name.tag.html'
      '4':
        'name': 'punctuation.definition.tag.html'
    'name': 'meta.tag.any.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
    ]
  }
  {
    'begin': '<!--'
    'captures':
      '0':
        'name': 'punctuation.definition.comment.html'
    'end': '--\\s*>'
    'name': 'comment.block.html'
    'patterns': [
      {
        'match': '--(?!-*\\s*>)'
        'name': 'invalid.illegal.bad-comments-or-CDATA.html'
      }
    ]
  }
  {
    'begin': '<!'
    'captures':
      '0':
        'name': 'punctuation.definition.tag.html'
    'end': '>'
    'name': 'meta.tag.sgml.html'
    'patterns': [
      {
        'begin': '(?i:DOCTYPE)'
        'captures':
          '1':
            'name': 'entity.name.tag.doctype.html'
        'end': '(?=>)'
        'name': 'meta.tag.sgml.doctype.html'
        'patterns': [
          {
            'match': '"[^">]*"'
            'name': 'string.quoted.double.doctype.identifiers-and-DTDs.html'
          }
        ]
      }
      {
        'begin': '\\[CDATA\\['
        'end': ']](?=>)'
        'name': 'constant.other.inline-data.html'
      }
      {
        'match': '(\\s*)(?!--|>)\\S(\\s*)'
        'name': 'invalid.illegal.bad-comments-or-CDATA.html'
      }
    ]
  }
  {
    'begin': '(?:^\\s+)?(<)((?i:style))\\b(?![^>]*/>)'
    'captures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.style.html'
      '3':
        'name': 'punctuation.definition.tag.html'
    'end': '(</)((?i:style))(>)(?:\\s*\\n)?'
    'name': 'source.css.embedded.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'begin': '(>)'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.tag.html'
        'end': '(?=</(?i:style))'
        'patterns': [
          {
            'include': 'source.css'
          }
        ]
      }
    ]
  }
  {
    'begin': '(?:^\\s+)?(<)((?i:script))\\b(?=[^>]*\\btype\\s*=\\s*[\'"]?text/(x-handlebars|(x-(handlebars-)?|ng-)?template|html)[\'"]?)(?![^>]*/>)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.script.html'
    'end': '(?<=</(script|SCRIPT))(>)(?:\\s*\\n)?'
    'endCaptures':
      '2':
        'name': 'punctuation.definition.tag.html'
    'contentName': 'text.embedded.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'begin': '(?<!</(?:script|SCRIPT))(>)'
        'captures':
          '1':
            'name': 'punctuation.definition.tag.html'
          '2':
            'name': 'entity.name.tag.script.html'
        'end': '(</)((?i:script))'
        'patterns': [
          {
            'include': 'text.html.basic'
          }
        ]
      }
    ]
  }
  {
    'begin': '(?:^\\s+)?(<)((?i:script))\\b(?=[^>]*\\btype\\s*=\\s*[\'"]?text/coffeescript[\'"]?)(?![^>]*/>)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.script.html'
    'end': '(?<=</(script|SCRIPT))(>)(?:\\s*\\n)?'
    'endCaptures':
      '2':
        'name': 'punctuation.definition.tag.html'
    'contentName': 'source.coffee.embedded.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'begin': '(?<!</(?:script|SCRIPT))(>)'
        'captures':
          '1':
            'name': 'punctuation.definition.tag.html'
          '2':
            'name': 'entity.name.tag.script.html'
        'end': '(</)((?i:script))'
        'patterns': [
          {
            'captures':
              '1':
                'name': 'punctuation.definition.comment.coffee'
            'match': '(#).*?((?=</script)|$\\n?)'
            'name': 'comment.line.number-sign.coffee'
          }
          {
            'include': 'source.coffee'
          }
        ]
      }
    ]
  }
  {
    'begin': '(?:^\\s+)?(<)((?i:script))\\b(?![^>]*/>)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.html'
      '2':
        'name': 'entity.name.tag.script.html'
    'end': '(?<=</(script|SCRIPT))(>)(?:\\s*\\n)?'
    'endCaptures':
      '2':
        'name': 'punctuation.definition.tag.html'
    'contentName': 'source.js.embedded.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
      {
        'begin': '(?<!</(?:script|SCRIPT))(>)'
        'captures':
          '1':
            'name': 'punctuation.definition.tag.html'
          '2':
            'name': 'entity.name.tag.script.html'
        'end': '(</)((?i:script))'
        'patterns': [
          {
            'captures':
              '1':
                'name': 'punctuation.definition.comment.js'
            'match': '(//).*?((?=</script)|$\\n?)'
            'name': 'comment.line.double-slash.js'
          }
          {
            'begin': '/\\*'
            'captures':
              '0':
                'name': 'punctuation.definition.comment.js'
            'end': '\\*/|(?=</script)'
            'name': 'comment.block.js'
          }
          {
            'include': 'source.js'
          }
        ]
      }
    ]
  }
  {
    'begin': '(</?)([a-zA-Z0-9:-]+)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.tag.begin.html'
      '2':
        'name': 'entity.name.tag.other.html'
    'end': '(>)'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.tag.end.html'
    'name': 'meta.tag.other.html'
    'patterns': [
      {
        'include': '#tag-stuff'
      }
    ]
  }
  {
    'include': '#entities'
  }
  {
    'include': '#logic-code'
  }
  {
    'match': '<>'
    'name': 'invalid.illegal.incomplete.html'
  }
]
'repository':
  'operators':
    'patterns': [
      {
        'match': '\\?'
        'name': 'keyword.operator.logical.js'
      }
    ]
  'entities':
    'patterns': [
      {
        'match': '(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)'
        'captures':
          '1':
            'name': 'punctuation.definition.entity.begin.html'
          '2':
            'name': 'entity.name.entity.other.html'
          '3':
            'name': 'punctuation.definition.entity.end.html'
        'name': 'constant.character.entity.html'
      }
      {
        'match': '&'
        'name': 'invalid.illegal.bad-ampersand.html'
      }
    ]
  'string-double-quoted':
    'begin': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.html'
    'end': '"'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.html'
    'name': 'string.quoted.double.html'
    'patterns': [
      {
        'include': '#entities'
      }
    ]
  'string-single-quoted':
    'begin': '\''
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.html'
    'end': '\''
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.html'
    'name': 'string.quoted.single.html'
    'patterns': [
      {
        'include': '#entities'
      }
    ]
  'tag-generic-attribute':
    'match': '(?<=[^=])\\b([a-zA-Z0-9:-]+)'
    'name': 'entity.other.attribute-name.html'
  'logic-code':
    'begin': '\\{'
    'beginCaptures':
      '0':
        'name': 'entity.name.tag.html'
    'end': '\\}'
    'endCaptures':
      '0':
        'name': 'entity.name.tag.html'
    'name': 'logic.block'
    'contentName': 'source.js.embedded.html'
    'patterns': [
      {
        'include': '#operators'
      }
      {
        'include': 'source.js'
      }
    ]
  'tag-stuff':
    'patterns': [
      {
        'include': '#tag-generic-attribute'
      }
      {
        'include': '#string-double-quoted'
      }
      {
        'include': '#string-single-quoted'
      }
      {
        'include': "#logic-code"
      }
      {
        'include': '#unquoted-attribute'
      }
    ]
  'unquoted-attribute':
    'match': '(?<==)(?:[^\\s<>/\'"]|/(?!>))+'
    'name': 'string.unquoted.html'
